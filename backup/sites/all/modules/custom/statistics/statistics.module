<?php
/**
 * Created by PhpStorm.
 * User: kortum
 * Date: 03.11.2015
 * Time: 19:20
 */

/**
 * Implements block_info
 */
function statistics_block_info() {
    //statistics_create_diagramm();

    $blocks['statistics'] = array(
        // The name that will appear in the block list.
        'info' => t('statistiken'),
        // Default setting.
        'cache' => DRUPAL_CACHE_PER_ROLE,
    );
    return $blocks;
}

/**
 * Custom content function.
 *
 * Gets all Documents from the group of the current user.
 *
 * @return
 *   A result set of documents
 */
function statistics_getDocuments(){

    //Current User
    global $user;

    //Use Database API to retrieve group documents.

    $result = db_query("SELECT * FROM {node} AS node INNER JOIN {users} AS users ON node.uid = users.uid WHERE node.type = 'dokument' AND users.uid IN(SELECT users.uid FROM {users} AS users INNER JOIN {users_roles} AS zwischentabelle ON users.uid = zwischentabelle.uid INNER JOIN {role} AS role ON zwischentabelle.rid = role.rid WHERE role.rid = (SELECT role.rid FROM {users} AS users INNER JOIN {users_roles} AS zwischentabelle ON users.uid = zwischentabelle.uid INNER JOIN {role} AS role ON zwischentabelle.rid = role.rid WHERE users.uid = :user_id))", array(
        ':user_id' => $user->uid,
    ));


        return $result;
}

function getCountOfString($arr, $search) {
    $count = 0;
    foreach ($arr as $val) {
        if ($val->field_methodenreferenz_target_id === $search->field_methodenreferenz_target_id) {
            $count++;
        }
    }
    return $count;
}

function statistics_create_diagramm() {

    /*
    // create image
    $image = imagecreatetruecolor(600, 400);

    $back = imagecolorallocate($image, 255, 255, 255);
    imagefilledrectangle($image, 0, 0, 600, 400, $back);

    $white = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);
    $gray = imagecolorallocate($image, 0xC0, 0xC0, 0xC0);
    $darkgray = imagecolorallocate($image, 0x90, 0x90, 0x90);
    $navy = imagecolorallocate($image, 0x90, 0x90, 0x90);
    $navy = imagecolorallocate($image, 0x00, 0x00, 0x80);
    $darknavy = imagecolorallocate($image, 0x00, 0x00, 0x50);
    $red = imagecolorallocate($image, 0xFF, 0x00, 0x00);
    $darkred = imagecolorallocate($image, 0x90, 0x00, 0x00);
    $green = imagecolorallocate($image, 0x00, 0xFF, 0x00);
    $darkgreen = imagecolorallocate($image, 0x0, 0x90, 0x00);

    // make the 3D effect
    for ($i = 220; $i > 200; $i--) {
        imagefilledarc($image, 300, $i, 500, 250, 0, 45, $darknavy, IMG_ARC_PIE);
        imagefilledarc($image, 300, $i, 500, 250, 45, 360, $darkgreen, IMG_ARC_PIE);
    }


    imagefilledarc($image, 300, 200, 500, 250, 0, 45, $navy, IMG_ARC_PIE);
    imagefilledarc($image, 300, 200, 500, 250, 45, 290, $green, IMG_ARC_PIE);
    imagefilledarc($image, 300, 200, 500, 250, 290, 360, $red, IMG_ARC_PIE);

    //imagepng($image, "Test2.png");
*/
}

/**
 * Implements hook_block_view().
 *
 * Prepares the contents of the block.
 */
function statistics_block_view($delta = '') {
    switch ($delta) {
        case 'statistics':

            // get group documents
            $result = statistics_getDocuments();

            $tempString = "";
            $tempString = " Wie oft wurden Methoden von der Gruppe bereits bearbeitet? ";
            //$tempString = $tempString . " Wie viele Methoden aus der ersten Phase? <br>";
            $intPhase1 = 0;
            $intPhase2 = 0;
            $intPhase3 = 0;
            $intPhase4 = 0;
            $intPhase5 = 0;
            $intPhase6 = 0;
            $intInsgesamtDokumente = 0;
            $intInsgesamtMethoden = 0;

            //statistics_create_diagramm();

            $width = 360;
            //$temp = '<img src="Test2.png" width="' . $width . 'px" height="360px"/>';

            foreach ($result as $node) {

                $methodResult = db_query("SELECT node.title FROM {node} AS node WHERE node.nid IN (SELECT referenz.field_methodenreferenz_target_id FROM {node} AS node INNER JOIN {field_data_field_methodenreferenz} AS referenz ON node.nid = referenz.entity_id WHERE node.nid = :node_id)", array(
                    ':node_id' => $node->nid,
                ));

                //save each method name in an array to read it out in the next step
                foreach ($methodResult as $method) {
                    $tempVariable[] = $method;
                }
            }

            $tempString = $tempString . sizeof($tempVariable) . "<br>";

            for ($i = 0; $i < sizeof($tempVariable); $i++) {
                //ToDO
                //Einzelne Phasen auswerten und Zahlen in Variablen einspeichern
            }

            //$tempString = $tempString . "<img src=".$va."alt= Test ><br><br></td>";




            $allDocuments = db_query("SELECT * FROM {node} AS node WHERE node.type = 'dokument'");

            foreach ($allDocuments as $method) {
                $intInsgesamtDokumente++;
            }

            $allMethods = db_query("SELECT * FROM {node} AS node WHERE node.type = 'methode'");

            foreach ($allMethods as $method) {
                $intInsgesamtMethoden++;
            }


            $tempString = $tempString . "Wie viele Methoden werden zurzeit zur Verf√ºgung gestellt? " . $intInsgesamtMethoden . "<br>";
            $tempString = $tempString . "Wie oft wurden Methoden insgesamt bearbeitet? " . $intInsgesamtDokumente . "<br>";


            $allDocuments = db_query("SELECT node.title, phasenreferenz.field_phasenreferenz_target_id, raumreferenz.field_raumreferenz_target_id, methode.field_methodenreferenz_target_id FROM {node} as node INNER JOIN {field_data_field_phasenreferenz} as phasenreferenz on node.nid = phasenreferenz.entity_id INNER JOIN {field_data_field_raumreferenz} as raumreferenz on node.nid = raumreferenz.entity_id INNER JOIN {field_data_field_methodenreferenz} as methode on node.nid = methode.entity_id where node.type='dokument'");

            //getCountOfString($allDocuments, '')


            foreach ($allDocuments as $docs) {
                if($docs->field_phasenreferenz_target_id == 27 && $docs->field_raumreferenz_target_id == 29) {
                    $intPhase1++;
                }
                if($docs->field_phasenreferenz_target_id == 28 && $docs->field_raumreferenz_target_id == 29) {
                    $intPhase2++;
                }
                if($docs->field_phasenreferenz_target_id == 27 && $docs->field_raumreferenz_target_id == 30) {
                    $intPhase3++;
                }
                if($docs->field_phasenreferenz_target_id == 28 && $docs->field_raumreferenz_target_id == 30) {
                    $intPhase4++;
                }
                if($docs->field_phasenreferenz_target_id == 27 && $docs->field_raumreferenz_target_id == 31) {
                    $intPhase5++;
                }
                if($docs->field_phasenreferenz_target_id == 28 && $docs->field_raumreferenz_target_id == 31) {
                    $intPhase6++;
                }
            }

            $tempString = $tempString . "Wie oft wurden Methoden aus Phase 1 bearbeitet? " . $intPhase1 . "<br>";
            $tempString = $tempString . "Wie oft wurden Methoden aus Phase 2 bearbeitet? " . $intPhase2 . "<br>";
            $tempString = $tempString . "Wie oft wurden Methoden aus Phase 3 bearbeitet? " . $intPhase3 . "<br>";
            $tempString = $tempString . "Wie oft wurden Methoden aus Phase 4 bearbeitet? " . $intPhase4 . "<br>";
            $tempString = $tempString . "Wie oft wurden Methoden aus Phase 5 bearbeitet? " . $intPhase5 . "<br>";
            $tempString = $tempString . "Wie oft wurden Methoden aus Phase 6 bearbeitet? " . $intPhase6 . "<br>";

            $tempString = $tempString;

            $allDocuments2 = db_query("SELECT node.title, phasenreferenz.field_phasenreferenz_target_id, raumreferenz.field_raumreferenz_target_id, methode.field_methodenreferenz_target_id FROM {node} as node INNER JOIN {field_data_field_phasenreferenz} as phasenreferenz on node.nid = phasenreferenz.entity_id INNER JOIN {field_data_field_raumreferenz} as raumreferenz on node.nid = raumreferenz.entity_id INNER JOIN {field_data_field_methodenreferenz} as methode on node.nid = methode.entity_id where node.type='dokument'");

            
            foreach ($allDocuments2 as $docs) {

            }

                $items[] = array(
                'data' => $tempString);

            // No content was found.
            if (empty($items)) {
                $block['content'] = t('Bisher wurden keine Aufgaben verteilt!');
            } else {
                // Pass data through theme function.
                $block['content'] = t($tempString);
            }
            return $block;
    }
}


