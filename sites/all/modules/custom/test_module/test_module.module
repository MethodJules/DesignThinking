<?php
/**
 * Created by PhpStorm.
 * User: kortum
 * Date: 03.11.2015
 * Time: 19:20
 */

require('helperfunctions.php');

function test_module_block_info() {
    $blocks['methods'] = array(
        'info' => t('Protocol Information'),
    );
    return $blocks;
}

function test_module_block_view($delta) {
    $block = array();

    switch ($delta) {



        case 0:
            global $user;
            $user_id = $user->uid;
            $path = arg(0);

            global $base_url;

            if(!strcmp($path, "protokoll_allgemein")) {
                $buttonString = "<a href='".$base_url."/protokoll_allgemein' style=\"background-color:#D0D0D0\">-allgemeine Informationen</a>";
            } else {
                $buttonString = "<a href='".$base_url."/protokoll_allgemein'>allgemeine Informationen</a>";
            }

            $buttonString .= '<br>';

            if(!strcmp($path, "protokoll_vorbereitung")) {
                $buttonString .='<a href="'.$base_url.'/protokoll_vorbereitung" style="background-color:#D0D0D0;">Vorbereitung</a>';
            } else {
                $buttonString .= "<a href='".$base_url."/protokoll_vorbereitung'>Vorbereitung</a>";
            }

            $buttonString .= '<br>';

            if(!strcmp($path, "protokoll_offene_aufgaben")) {
                $buttonString .= "<a href='".$base_url."/protokoll_offene_aufgaben'style=\"background-color:#D0D0D0\">offene Aufgaben</a>";
            } else {
                $buttonString .= "<a href='".$base_url."/protokoll_offene_aufgaben'>offene Aufgaben</a>";
            }

            $buttonString .= '<br>';
            //$buttonString .= get_open_task_buttons();

            if(!strcmp($path, "protokoll_methoden_uebersicht")) {
                $buttonString .= "<a href='".$base_url."/protokoll_methoden_uebersicht' style=\"background-color:#D0D0D0\">Methodenübersicht</a>";
            } else {
                $buttonString .= "<a href='".$base_url."/protokoll_methoden_uebersicht'>Methodenübersicht</a>";
            }

            $buttonString .= '<br>';
            $buttonString .= get_methods_buttons();

            if(!strcmp($path, "protokoll_neue_aufgaben")) {
                $buttonString .= "<a href='".$base_url."/protokoll_neue_aufgaben' style=\"background-color:#D0D0D0\">neue Aufgaben</a>";
            } else {
                $buttonString .= "<a href='".$base_url."/protokoll_neue_aufgaben'>neue Aufgaben</a>";
            }

            $buttonString .= '<br>';
            $buttonString .= get_new_task_buttons();

            if(!strcmp($path, "protokoll_beschreibungen")) {
                $buttonString .= "<a href='".$base_url."/protokoll_beschreibungen'style=\"background-color:#D0D0D0\">Beschreibungen</a>";
            } else {
                $buttonString .= "<a href='".$base_url."/protokoll_beschreibungen'>Beschreibungen</a>";
            }

            $buttonString .= '<br>';

            $block['subject'] = t('Protokoll');
            $block['content'] = $buttonString;
            break;

    }
    return $block;
}

function test_module_menu() {

    $items['protokoll_erstellen'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_erstellenForm'),
        'file' => 'test_module_create_protocol.inc',
    );

    $items['protokoll_allgemein'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_allgemeineForm'),
        'file' => 'test_module_general_information.inc',
    );

    $items['protokoll_vorbereitung'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_vorbereitungForm'),
        'file' => 'test_module_preparation.inc',
    );

    $items['protokoll_offene_aufgaben'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_offeneAufgabenForm'),
        'file' => 'test_module_open_tasks.inc',

    );

    $items['protokoll_methoden_uebersicht'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'access callback' => 'user_is_logged_in',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('test_module_methodenForm'),
        'file' => 'test_module_method_overview.inc',
    );

    $items['protokoll_beschreibungen'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_beschreibung_form'),
        'file' => 'test_module_descriptions.inc',
    );

    $items['protokoll_neue_Aufgaben'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_new_task_form'),
        'file' => 'test_module_new_tasks.inc',
    );

    $items['protokoll_neue_Methodendurchführung'] = array(
        'title' => 'neue Methode durchführen',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_new_method_execution_form'),
        'file' => 'test_module_new_method_execution.inc',
    );

    $items['protokoll_neue_Aufgabendurchführung'] = array(
        'title' => 'neue Aufgabe anlegen',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_new_task_execution_form'),
        'file' => 'test_module_new_task_execution.inc',
    );

    $items['protokoll_methode_aendern/%/%'] = array(
        'title' => 'Methodendurchführung bearbeiten',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'access callback' => 'user_is_logged_in',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('test_module_change_method_execution_form'),
        'file' => 'test_module_new_method_execution.inc',
    );

    $items['methodenanzeige/%/%'] = array(
        'title' => 'Methodendurchführung ansehen',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_show_method_execution_form'),
        'file' => 'test_module_new_method_execution.inc',
    );

    $items['protokollanzeige/%'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_show_protocol_form'),
        'file' => 'test_module_show_protocol.inc',
    );

    $items['change_protocol_general_information/%'] = array(
        'title' => 'Protokoll ändern',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_change_protocol_general_information_form'),
        'file' => 'test_module_change_protocol.inc',
    );

    $items['change_protocol_content_information/%'] = array(
        'title' => 'Protokoll ändern',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('test_module_change_protocol_content_information_form'),
        'file' => 'test_module_change_protocol.inc',
    );

    $items['change_protocol_method_information/%'] = array(
        'title' => 'Methode ändern',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'access callback' => 'user_is_logged_in',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('test_module_change_protocol_method_information_form'),
        'file' => 'test_module_change_protocol.inc',
    );

    $items['delete_task/%/%'] = array(
        'title' => 'Publications',
        'access callback' => true,
        'access callback' => 'user_is_logged_in',
        'page callback' => 'test_module_delete_task_form',
        'file' => 'test_module_delete_task.inc',
    );

    $items['delete_file/%/%/%'] = array(
        'title' => 'Publications',
        'access callback' => true,
        'access callback' => 'user_is_logged_in',
        'page callback' => 'test_module_delete_file',
        'file' => 'test_module_delete_task.inc',
    );


    return $items;
}

function new_method_submit() {
    drupal_goto('/protokoll_neue_Methodendurchführung');
}

function backSubmit($form, &$form_state) {
    drupal_goto('/protokoll_allgemein');
}

function get_open_task_buttons() {
    global $user;
    $user_id = $user->uid;

    $participants = getParticipants2();
    $protcol_id = get_open_protocol2($participants);

    $sql = "SELECT * FROM {task} AS t WHERE t.uid IN ($participants) AND t.done = 0 ORDER BY t.deadline";
    $result = db_query($sql);

    $buttonString = "";

    $reminder = check_current_open_protocol();

    if($reminder["exist"] == 1) {
        foreach($result as $pro) {
            //$test = intval($pro);

            if ($pro->done == 0 && $pro->protocol_id != $protcol_id) {
                //$buttonString .= "<div style='text-indent:40px;'><a href='/design_thinking_tool/protokoll_offene_aufgaben'>$pro->short_description</a></div>";
                $buttonString .= "<div style='text-indent:40px;'>$pro->short_description</div>";
            }
    }


    }

    return $buttonString;
}

function get_new_task_buttons() {
    $list = getParticipants2();
    $protocol_id = 0;

    $sql = "SELECT * FROM {protocol} AS pro WHERE pro.uid IN ($list) AND pro.finished = 0";
    $result = db_query($sql);

    foreach($result as $item) {
        $protocol_id = $item->protocol_id;
    }

    $sql = "SELECT * FROM {task} AS t WHERE t.protocol_id = $protocol_id";
    $proresult = db_query($sql);

    $buttonString = "";

    $reminder = check_current_open_protocol();

    if($reminder["exist"] == 1) {
        foreach($proresult as $pro) {

            if ($pro->done == 0) {
                //$buttonString .= "<div style='text-indent:40px;'><a href='/design_thinking_tool/protokoll_offene_aufgaben'>$pro->short_description</a></div>";
                $buttonString .= "<div style='text-indent:40px;'>$pro->short_description</div>";
            }

        }
    }




    return $buttonString;
}

function get_methods_buttons() {
    global $base_url;
    $buttonString = "";
    $participants = getParticipants2();
    $protcol_id = get_open_protocol2($participants);

    $sql = "SELECT * FROM {method_execution} as m WHERE m.protocol_id = $protcol_id";
    $result = db_query($sql);

    $reminder = check_current_open_protocol();

    if($reminder["exist"] == 1) {
        foreach($result as $pro) {


            $buttonString .= "<div style='text-indent:40px;'><a href='$base_url/show_method/$pro->method_execution_id/pXs8hYVUqe/'>$pro->name</a></div>";
        }
    }



    return $buttonString;
}