<?php
/**
 * Created by PhpStorm.
 * User: jonaskortum
 * Date: 18.11.16
 * Time: 13:33
 */


function task_assignment_views_post_execute(&$view) {

    if(!strcmp($view->name, "calendar")) {
        $result2 = array();

        foreach ($view->result as $result) {
            global $user;
            $te = $result;


            $sql = "SELECT * FROM {node} as node WHERE node.nid = '$te->nid'";
            $result3 = db_query($sql);

            foreach($result3 as $pro) {
                if(compareRoles($user->uid,$pro->uid )) {
                    array_push($result2,$result);
                }

            }

        }

        $view2 = $view;
        $view2->result = $result2;

        return $view2;
    } else {
        return $view;
    }




}

function compareRoles($uid1, $uid2) {

    $role1 = "";
    $role2 = "";

    $sql = "SELECT * FROM {users_roles} WHERE uid = $uid1";
    $result3 = db_query($sql);

    foreach($result3 as $r3) {
        $role1 = $r3->rid;
    }

    $sql = "SELECT * FROM {users_roles} WHERE uid = $uid2";
    $result4 = db_query($sql);

    foreach($result4 as $r4) {
        $role2 = $r4->rid;
    }

    if($role1 == $role2 || $role2 == 3) {
        return true;
    } else {
        return false;
    }

}

function task_assignment_menu() {
    $items['neue_Aufgabenzuweisung'] = array(
        'page callback' => 'drupal_get_form',
        'page arguments' => array('task_assignment_form'),
        'access callback' => 'user_is_logged_in',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['neue_Terminerstellung'] = array(
        'page callback' => 'drupal_get_form',
        'page arguments' => array('task_assignment_appointment_form'),
        'access callback' => 'user_is_logged_in',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    return $items;
}

function task_assignment_appointment_form() {
    $form['test'] = array(
        '#title' => "neue Aufgabe erstellen",
        '#type' => 'fieldset',
        '#description' => "Es kann eine Mail an einen beliebigen Empfänger versendet werden. Die Adresse des Absenders ist standardmäßig die registrierte Mail-Adresse des Benutzers."
    );

    $form['test']['short_description'] = array(
        '#type' => 'textfield',
        '#require' => TRUE,
        '#title' => t('Kurzbezeichnung des Termins'),
    );

    $form['test']['task'] = array(
        '#title' => t('Aufgabenbeschreibung'),
        '#resizable' => FALSE,
        '#type' => 'textarea',
    );

    $dateformat = 'Y-m-d H:i';
    $label = t('Custom date');
    $timestamp = time();
    $dbv = $timestamp;
    if (empty($dbv)) {
        $d = new DateTime('@'.$dbv);
        $value = $d->format($dateformat);
    } else {
        $d = new DateTime();
        $value = $d->format($dateformat);
    }

    $form['test']['deadline'] = array(
        '#type' => 'date_popup',
        '#date_timezone' => date_default_timezone(),
        '#date_format' => $dateformat,
        '#date_year_range' => '-3:+3',
        '#title' => $label,
        '#default_value' => $value,
    );

    $form['back'] = array(
        '#type' => 'submit',
        '#value' => 'Abbrechen',
        '#submit' => array('back_to_home')
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Speichern',
        '#submit' => array('save_new_appointment_assignment')
    );

    return $form;
}

function save_new_appointment_assignment($form, &$form_state) {

    $short_description = $form_state['values']['short_description'];
    $task = $form_state['values']['task'];
    $deadline = $form_state['values']['deadline'];

    if(!strlen($short_description) <1 && !strlen($task) <1) {
        $node = new stdClass();
        $node->type = 'event';
        node_object_prepare($node);

// Define language (currently language neutral)
        $node->language = LANGUAGE_NONE;

// Basic content
        $node->title = $short_description;
        $node->body[$node->language][0]['value'] = $task;

        $date = new DateTime($deadline);

        $date->sub(new DateInterval('PT1H'));
        $deadline2 = $date->format('Y-m-d H:i:s');

        $deadline2 = str_replace(" ", "T", $deadline2);

        $username = "TERMIN";

        $referenz = "";

        global $user;



        $sql = "INSERT INTO {appointment} (appointment, date, short_description, uid) VALUES('$task', '$deadline','$short_description', $user->uid)";
        $result = db_query($sql);


        $sql2 = "SELECT appointment_id from {appointment} ORDER BY appointment_id DESC LIMIT 1";
        $result2 = db_query($sql2);

        foreach($result2 as $ko) {
            $referenz = $ko->appointment_id;
        }

        $node->field_event_date[$node->language][0]['value'] = $deadline2;
        $node->field_event_date[$node->language][0]['timezone'] = "Europe/Berlin";
        $node->field_event_date[$node->language][0]['timezone_db'] = "Europe/Berlin";
        $node->field_art[$node->language][0]['tid'] = 1;
        $node->field_referenznummer[$node->language][0]['value'] = $referenz;
        $node->field_referenzmitglied[$node->language][0]['value'] = $username->name;
// Save node
        node_save($node);

        drupal_set_message("Termin wurde erfolgreich angelegt");
        drupal_goto("gruppentermine");
    } else {
        if(strlen($short_description) <1) {
            drupal_set_message("Bitte trage eine Kurzbezeichnung ein!", "error");
        }

        if(strlen($task) <1) {
            drupal_set_message("Bitte trage eine Terminbeschreibung ein!", "error");
        }
    }




}

function task_assignment_form() {

    $path = drupal_get_path('module', 'fivestar');
    drupal_add_js($path . '/js/fivestar.js');
    drupal_add_css($path . '/css/fivestar.css');

    $dateformat = 'Y-m-d H:i';
    $label = t('Custom date');
    $timestamp = time();
    $dbv = $timestamp;

    $parts = getParticipants2();
    $list = explode(',', $parts);
    $new_parts = array();

    foreach ($list as $p) {
        $user=user_load($p);
        $username=$user->field_first_name['und'][0]['value'] . " " . $user->field_last_name['und'][0]['value'];;
        $new_parts[$p] = $username;
    }

    if (empty($dbv)) {
        $d = new DateTime('@'.$dbv);
        $value = $d->format($dateformat);
    } else {
        $d = new DateTime();
        $value = $d->format($dateformat);
    }

    $form['test'] = array(
        '#title' => "neue Aufgabe erstellen",
        '#type' => 'fieldset',
        '#description' => "Es kann eine Mail an einen beliebigen Empfänger versendet werden. Die Adresse des Absenders ist standardmäßig die registrierte Mail-Adresse des Benutzers."
    );

    $form['test']['short_description'] = array(
        '#type' => 'textfield',
        '#require' => TRUE,
        '#title' => t('Kurzbezeichnung der Aufgabe'),
    );

    $form['test']["raum"]["responsible"] = array(
        "#type" => "select",
        "#title" => t("Verantwortliche Person"),
        "#options" => $new_parts,
    );

    $form['test']['task'] = array(
        '#title' => t('Aufgabenbeschreibung'),
        '#resizable' => FALSE,
        '#type' => 'textarea',
    );

    $form['test']['deadline'] = array(
        '#type' => 'date_popup',
        '#date_timezone' => date_default_timezone(),
        '#date_format' => $dateformat,
        '#date_year_range' => '-3:+3',
        '#title' => $label,
        '#default_value' => $value,
    );

    $types = array("niedrig" => "niedrig", "mittel" => "mittel", "hoch" => "hoch");


    $form['test']["raum2"]["prio"] = array(
        "#type" => "select",
        "#title" => t("Priorität der Aufgabe"),
        "#options" => $types,
    );

    $form['back'] = array(
        '#type' => 'submit',
        '#value' => 'Abbrechen',
        '#submit' => array('back_to_home')
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Speichern',
        '#submit' => array('save_new_task_assignment')
    );



    return $form;
}

function back_to_home($form, &$form_state) {
    drupal_goto("");

}

function remove_body_field_validation(&$element, &$form_state, $form) {

    if ($element['#field_name'] == 'body') {
        $element['#required'] = FALSE;
        // Clear previous validation errors.
        $errors = &drupal_static('form_set_error', array());
        $err_key = $element['#field_name'] . '][' . LANGUAGE_NONE;
        if (array_key_exists($err_key, $errors)) {
            unset($errors[$err_key]);
        }
        return;
    }

}

function save_new_task_assignment($form, &$form_state) {

    $user_id = $form_state['values']['responsible'];
    $protocol_id =0;
    $task = $form_state['values']['task'];
    $deadline = $form_state['values']['deadline'];
    $short_description = $form_state['values']['short_description'];
    $priority = $form_state['values']['prio'];

    if(!strlen($short_description) <1 && !strlen($task) <1) {
        $node = new stdClass();

        // Set content type
        $node->type = 'event';

// Prepare defaults
        node_object_prepare($node);

// Define language (currently language neutral)
        $node->language = LANGUAGE_NONE;

// Basic content
        $node->title = $short_description;
        $node->body[$node->language][0]['value'] = $task;

// Example if using custom fields


        $date = new DateTime($deadline);

        $date->sub(new DateInterval('PT1H'));
        $deadline2 = $date->format('Y-m-d H:i:s');

        $deadline2 = str_replace(" ", "T", $deadline2);
        //$deadline2 = $deadline2 . ":00";
        //drupal_set_message($deadline2);

        $test = '2016-12-20T22:30:00';

        $username = user_load($user_id);

        $referenz = "";




        $sql = "INSERT INTO {task} (uid, task, deadline, protocol_id, done, short_description, priority) VALUES($user_id, '$task','$deadline', $protocol_id, 0, '$short_description', '$priority')";
        $result = db_query($sql);


        $sql2 = "SELECT task_id from {task} ORDER BY task_id DESC LIMIT 1";
        $result2 = db_query($sql2);

        foreach($result2 as $ko) {
            $referenz = $ko->task_id;
        }

        $node->field_event_date[$node->language][0]['value'] = $deadline2;
        $node->field_event_date[$node->language][0]['timezone'] = "Europe/Berlin";
        $node->field_event_date[$node->language][0]['timezone_db'] = "Europe/Berlin";
        $node->field_art[$node->language][0]['tid'] = 2;
        $node->field_referenznummer[$node->language][0]['value'] = $referenz;
        $node->field_referenzmitglied[$node->language][0]['value'] = $username->name;
// Save node
        node_save($node);
        drupal_set_message("Aufgabe wurde angelegt");
        drupal_goto("/gruppenaufgaben");
    } else {
        if(strlen($short_description) <1) {
            drupal_set_message("Bitte trage eine Kurzbezeichnung ein!", "error");
        }

        if(strlen($task) <1) {
            drupal_set_message("Bitte trage eine Aufgabenbeschreibung ein!", "error");
        }
    }
}

